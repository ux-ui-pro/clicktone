{"mappings":";;;;;;;;;;;;AAAA,MAAM;IACJ,YAAY,IAAI,CAAE;QAChB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,YAAY,GAAG,IAAK,CAAA,OAAO,YAAY,IAAI,OAAO,kBAAkB,AAAD;QACxE,IAAI,CAAC,kBAAkB;IACzB;IAEA,qBAAqB;QACnB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,eAAe,kBAAkB,QAAQ;YACvE,MAAM,SAAS;gBACb,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;oBAC9B,SAAS,IAAI,CAAC,mBAAmB,CAAC,cAAc;oBAChD,SAAS,IAAI,CAAC,mBAAmB,CAAC,YAAY;gBAChD;YACF;YAEA,SAAS,IAAI,CAAC,gBAAgB,CAAC,cAAc,QAAQ;YACrD,SAAS,IAAI,CAAC,gBAAgB,CAAC,YAAY,QAAQ;QACrD;IACF;IAEA,MAAM,GAAG,EAAE;QACT,OAAO,IAAI,QAAQ,CAAC,SAAS;YAC3B,MAAM,KACH,IAAI,CAAC,CAAC,WAAa,SAAS,WAAW,IACvC,IAAI,CAAC,CAAC,SAAW,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,SACnD,IAAI,CAAC,CAAC;gBACL,MAAM,SAAS,IAAI,CAAC,YAAY,CAAC,kBAAkB;gBAEnD,OAAO,MAAM,GAAG;gBAChB,OAAO,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW;gBAC5C,OAAO,KAAK,CAAC;gBAEb;YACF,GACC,KAAK,CAAC,CAAC;gBACN,OAAO;YACT;QACJ;IACF;IAEA,KAAK,MAAM,IAAI,CAAC,IAAI,EAAE;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB;AACF;IAEA,2CAAe","sources":["src/index.js"],"sourcesContent":["class ClickTone {\n  constructor(file) {\n    this.file = file;\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    this.iOSFixAudioContext();\n  }\n\n  iOSFixAudioContext() {\n    if (this.audioContext.state === 'suspended' && 'ontouchstart' in window) {\n      const unlock = () => {\n        this.audioContext.resume().then(() => {\n          document.body.removeEventListener('touchstart', unlock);\n          document.body.removeEventListener('touchend', unlock);\n        });\n      };\n\n      document.body.addEventListener('touchstart', unlock, false);\n      document.body.addEventListener('touchend', unlock, false);\n    }\n  }\n\n  audio(url) {\n    return new Promise((resolve, reject) => {\n      fetch(url)\n        .then((response) => response.arrayBuffer())\n        .then((buffer) => this.audioContext.decodeAudioData(buffer))\n        .then((audioData) => {\n          const source = this.audioContext.createBufferSource();\n\n          source.buffer = audioData;\n          source.connect(this.audioContext.destination);\n          source.start(0);\n\n          resolve();\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  play(url = this.file) {\n    return this.audio(url);\n  }\n}\n\nexport default ClickTone;\n"],"names":[],"version":3,"file":"index.js.map"}